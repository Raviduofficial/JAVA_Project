package Admin;

import javax.swing.*;
import Database.dbconnection;
import java.sql.*;




public class editprofiledailog extends javax.swing.JDialog {

    private String opration_user_name;
    public editprofiledailog(java.awt.Frame parent, boolean modal, String username) {
        super(parent, modal);
        
        opration_user_name = username;
        initComponents();
        setdetails(username);
    }
    
 
    
    private void setdetails(String username){
        String sql = "Select * from user where user_id = ?";
        try(Connection conn = dbconnection.getConnection();
            PreparedStatement pst = conn.prepareStatement(sql)){
            pst.setString(1,username);
            ResultSet rs = pst.executeQuery();
            
            while(rs.next()){
                new_name.setText(rs.getString("user_name"));
                new_email.setText(rs.getString("user_email"));
                new_password.setText("");
                new_phone.setText(rs.getString("user_phone"));
            }
        }catch(Exception e){
            System.out.println(e);
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        new_name = new javax.swing.JTextField();
        new_email = new javax.swing.JTextField();
        new_password = new javax.swing.JPasswordField();
        new_save = new javax.swing.JButton();
        new_cancel = new javax.swing.JButton();
        jLabel4 = new javax.swing.JLabel();
        new_phone = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        jLabel1.setText("Name");

        jLabel2.setText("Email");

        jLabel3.setText("Password");

        new_password.setText("jPasswordField1");
        new_password.setMaximumSize(new java.awt.Dimension(64, 22));

        new_save.setText("Save");
        new_save.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                new_saveActionPerformed(evt);
            }
        });

        new_cancel.setText("Cancel");
        new_cancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                new_cancelActionPerformed(evt);
            }
        });

        jLabel4.setText("Phone");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel1)
                                .addComponent(jLabel2))
                            .addGap(24, 24, 24)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(new_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addComponent(new_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addGroup(layout.createSequentialGroup()
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                .addComponent(jLabel3)
                                .addComponent(jLabel4))
                            .addGap(18, 18, 18)
                            .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(new_password, javax.swing.GroupLayout.DEFAULT_SIZE, 113, Short.MAX_VALUE)
                                .addComponent(new_phone))))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(new_save)
                        .addGap(18, 18, 18)
                        .addComponent(new_cancel)))
                .addContainerGap(200, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(54, 54, 54)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(new_name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(14, 14, 14)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(new_email, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(new_password, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(new_phone, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 40, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(new_cancel)
                    .addComponent(new_save))
                .addGap(51, 51, 51))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void new_saveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_new_saveActionPerformed
              String name = new_name.getText();
              String email = new_email.getText();
              char[] password = new_password.getPassword();
              String phone = new_phone.getText();
              
              if (name.isEmpty()) {
              JOptionPane.showMessageDialog(null, "Name cannot be empty.");
              return;}

              if (email.isEmpty() || !email.matches("^\\S+@\\S+\\.\\S+$")) {
              JOptionPane.showMessageDialog(null, "Please enter a valid email address.");
              return;}
              
              if (!phone.isEmpty() && !phone.matches("^(\\d{10}|\\d{13})$")) {
              JOptionPane.showMessageDialog(this, "Please enter a valid phone number (only 10 or 13 digits)!");
              return;}
              
              if(password.length > 0){
                  if (password.length < 8 || !new String(password).matches("^(?=.*[A-Za-z])(?=.*\\d).+$")) {
                        JOptionPane.showMessageDialog(this, "Password must be at least 8 characters and contain both letters and numbers!");
                        return;}                                   
                  String hashedPassword = Admin.encryption.hashpassword(new String(password));
                  String sql = "UPDATE user SET user_name=? ,user_password = ?, user_email = ?, user_phone = ? WHERE user_id = ?";
                  try(Connection conn = dbconnection.getConnection();
                      PreparedStatement pst = conn.prepareStatement(sql)){
                      pst.setString(1, name);
                      pst.setString(2, hashedPassword);
                      pst.setString(3, email);
                      pst.setString(4, phone);
                      pst.setString(5, opration_user_name);
            
            int rowsInserted = pst.executeUpdate();

            if (rowsInserted > 0) {
                JOptionPane.showMessageDialog(this, "User Profile updated successfully!");
                dispose();
 
            }else{
                JOptionPane.showMessageDialog(this, "User Profile could not be updated.");
            }
                  }catch(Exception e){
                      System.out.println(e);
                  }
            }else{
                  String sql = "UPDATE user SET user_name = ?, user_email = ?, user_phone = ? WHERE user_id = ?";
        
        try (Connection conn = dbconnection.getConnection();
             PreparedStatement pst = conn.prepareStatement(sql)) {
            
            pst.setString(1, name);
            pst.setString(2, email);
            pst.setString(3, phone);
            pst.setString(4, opration_user_name);
            
            int rowsUpdated = pst.executeUpdate();
            
            if (rowsUpdated > 0) {
                JOptionPane.showMessageDialog(this, "User Profile updated successfully!");
                dispose();
            } else {
                JOptionPane.showMessageDialog(this, "User Profile could not be updated.");
            }
        } catch (Exception e) {
            System.out.println(e);
        }
    }
              
    }//GEN-LAST:event_new_saveActionPerformed

    private void new_cancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_new_cancelActionPerformed
        dispose();
    }//GEN-LAST:event_new_cancelActionPerformed

    /**
     * @param args the command line arguments
     */
    /*public static void main(String args[]) {
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                editprofiledailog dialog = new editprofiledailog(new javax.swing.JFrame(), true);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }*/


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JButton new_cancel;
    private javax.swing.JTextField new_email;
    private javax.swing.JTextField new_name;
    private javax.swing.JPasswordField new_password;
    private javax.swing.JTextField new_phone;
    private javax.swing.JButton new_save;
    // End of variables declaration//GEN-END:variables
}
